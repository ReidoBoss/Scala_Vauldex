Instructions:
  - Fullfill the requirements below.
Submission:
  - Create a text file and name it as <yourid>-08062024
  - Submit to me 
@mribersabal
 on slack on or before 4:30 PM
// #1 Design a RESTful API that allows users to browse and borrow books. The API should allow users to perform the following actions:
  1.1 Search for books by title or author.
  GET http://localhost:9000/v1/books/{title}||{author}
  1.2 View a list of all available books.
  GET http://localhost:9000/v1/books/available
  1.3 Borrow a book if it is available.
  PUT http://localhost:9000/v1/books/available/{book-id}
  1.4 Return a book.
  POST http://localhost:9000/v1/user/books/{id}
// #2 Design a RESTful API for a music streaming service that allows users to create playlists, add and remove songs from them, and play songs.
The API should allow users to perform the following actions:
  2.1 View a list of all available songs.
  GET http://localhost:9000/v1/songs/available
  2.2 Search for songs by title, artist, or album.
  GET http://localhost:9000/v1/songs/{title}||{artist}||{album}
  2.3 Create a new playlist.
  POST http://localhost:9000/v1/users/playlist
  2.4 Add songs to a playlist.
  POST http://localhost:9000/v1/users/playlist/{playlist-id}/{song-id}
  2.5 Remove songs from a playlist.
  DELETE http://localhost:9000/v1/users/playlist/{playlist-id}/{song-id}
  2.5 Play a song.
  GET http://localhost:9000/v1/songs/{song-id}  
// #3 Design a RESTful API for an e-commerce website that allows users to browse products, add them to a cart, and checkout.
The API should allow users to perform the following actions:
  3.1 View a list of all products.
  GET http://localhost:9000/v1/products
  3.2 Search for products by name or category.
  GET http://localhost:9000/v1/products/{name}||{category}
  3.3 View the details of a specific product.
  GET http://localhost:9000/v1/products/{product-id}/details
  3.4 Add a product to a cart.
  POST http://localhost:9000/v1/cart/{product-id}
  3.5 View the contents of a cart.
  GET http://localhost:9000/v1/cart  
  3.6 Remove a product from a cart.
  DELETE http://localhost:9000/v1/cart/${product-id}  
  3.7 Checkout and place an order.
  PUT http://localhost:9000/v1/cart









